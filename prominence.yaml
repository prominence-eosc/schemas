openapi: 3.0.2
info:
  title: PROMINENCE
  description: Run containerised jobs across many clouds.
  version: 0.0.1
paths:
  /jobs/:
    get:
      tags:
        - jobs
      summary: List jobs
      description: >-
        List jobs submitted by the user defined in the token. By default only
        active (pending or running) jobs are returned, but this behaviour

        can be changed using query parameters. Filters can also be used to
        restrict the returned jobs.
      operationId: list_jobs_jobs__get
      parameters:
        - description: >-
            Display full details of jobs. By default only basic job details are
            returned.
          required: false
          schema:
            title: Detail
            type: boolean
            description: >-
              Display full details of jobs. By default only basic job details
              are returned.
            default: false
          name: detail
          in: query
        - description: Show completed jobs only
          required: false
          schema:
            title: Completed
            type: boolean
            description: Show completed jobs only
            default: false
          name: completed
          in: query
        - description: Show both completed and active jobs
          required: false
          schema:
            title: All
            type: boolean
            description: Show both completed and active jobs
            default: false
          name: all
          in: query
        - description: >-
            Constraint on labels for selecting what jobs to display, e.g.
            "app:lammps" would select jobs which have label "app" set to
            "lammps"
          required: false
          schema:
            title: Constraint
            type: string
            description: >-
              Constraint on labels for selecting what jobs to display, e.g.
              "app:lammps" would select jobs which have label "app" set to
              "lammps"
          name: constraint
          in: query
        - description: Job id (can be repeated to specify multiple jobs)
          required: false
          schema:
            title: Id
            type: array
            items:
              type: integer
            description: Job id (can be repeated to specify multiple jobs)
          name: id
          in: query
        - description: Show jobs associated with this workflow id
          required: false
          schema:
            title: Workflow Id
            type: integer
            description: Show jobs associated with this workflow id
          name: workflow_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List Jobs Jobs  Get
                type: array
                items:
                  $ref: '#/components/schemas/SubmittedJob'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - Authorization: []
    post:
      tags:
        - jobs
      summary: Create job
      description: Create a job
      operationId: create_job_jobs__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobId'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - Authorization: []
    delete:
      tags:
        - jobs
      summary: Delete jobs
      description: Delete one or more jobs
      operationId: delete_jobs_jobs__delete
      parameters:
        - description: Job ids
          required: false
          schema:
            title: Id
            type: array
            items:
              type: integer
            description: Job ids
          name: id
          in: query
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - Authorization: []
  /jobs/{id}:
    get:
      tags:
        - jobs
      summary: Describe job
      description: Return all details abou the specified job
      operationId: describe_job_jobs__id__get
      parameters:
        - description: Job id
          required: true
          schema:
            title: Id
            type: integer
            description: Job id
          name: id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmittedJob'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - Authorization: []
    delete:
      tags:
        - jobs
      summary: Delete job
      description: Delete job
      operationId: delete_job_jobs__id__delete
      parameters:
        - description: Job id
          required: true
          schema:
            title: Id
            type: integer
            description: Job id
          name: id
          in: path
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - Authorization: []
  /jobs/{id}/stdout:
    get:
      tags:
        - jobs
      summary: Job standard output
      description: Get job standard output
      operationId: job_stdout_jobs__id__stdout_get
      parameters:
        - description: Job id
          required: true
          schema:
            title: Id
            type: integer
            description: Job id
          name: id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - Authorization: []
  /jobs/{id}/stderr:
    get:
      tags:
        - jobs
      summary: Job standard error
      description: Get job standard error
      operationId: job_stderr_jobs__id__stderr_get
      parameters:
        - description: Job id
          required: true
          schema:
            title: Id
            type: integer
            description: Job id
          name: id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/plain:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - Authorization: []
  /jobs/{id}/remove:
    put:
      tags:
        - jobs
      summary: Job remove
      description: Remove completed job from queue
      operationId: job_remove_jobs__id__remove_put
      parameters:
        - description: Job id
          required: true
          schema:
            title: Id
            type: integer
            description: Job id
          name: id
          in: path
      responses:
        '204':
          description: Successfully removed job from queue
        '400':
          description: Service is degraded
        '403':
          description: >-
            Forbidden. Authorization is granted but the identity provided does
            not have sufficient access rights to do that action.
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - Authorization: []
  /health/:
    get:
      tags:
        - health
      summary: Health
      description: Provides the current health status of the service
      operationId: health_health__get
      responses:
        '204':
          description: Service is OK
        '409':
          description: Service is degraded
components:
  schemas:
    Artifact:
      title: Artifact
      required:
        - url
        - mountpoint
      type: object
      properties:
        url:
          type: string
          description: URL
        mountpoint:
          type: string
          description: Mountpoint
        executable:
          type: boolean
          description: If set to true artifact will be executable
          default: false
      description: Artifact
    ContainerRuntime:
      title: ContainerRuntime
      enum:
        - singularity
        - udocker
      type: string
      description: Container runtime
    CpuDetails:
      title: CpuDetails
      required:
        - clock
        - model
        - vendor
      type: object
      properties:
        clock:
          type: number
          description: Clock speed in MHz
        model:
          type: string
          description: Model
        vendor:
          type: string
          description: Vendor
      description: Details of CPU used
    Events:
      title: Events
      required:
        - createTime
      type: object
      properties:
        createTime:
          type: integer
          description: Creation time
        startTime:
          type: integer
          description: Start time
        endTime:
          type: integer
          description: End time
      description: Times at which the job/workflow was submitted, started running and ended
    Execution:
      title: Execution
      required:
        - site
        - cpu
        - maxMemoryUsageKB
        - tasks
      type: object
      properties:
        site:
          type: string
          description: Site where the job ran
        cpu:
          allOf:
            - $ref: '#/components/schemas/CpuDetails'
          description: CPU details
        maxMemoryUsageKB:
          type: integer
          description: Maximum memory usage of the job in KB
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskExecution'
          description: Task execution
      description: Details about the execution of a job
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    ImagePullCredential:
      title: ImagePullCredential
      required:
        - username
        - token
      type: object
      properties:
        username:
          type: string
          description: Username
        token:
          type: string
          description: Token
      description: Credentials for pulling container from registry
    InputFile:
      title: InputFile
      required:
        - filename
        - content
      type: object
      properties:
        filename:
          type: string
          description: Filename
        content:
          type: string
          description: Base64 encoded content of file
        executable:
          type: boolean
          description: If set to true input file will be executable
          default: false
      description: Small input file
    Job:
      title: Job
      required:
        - tasks
        - resources
      type: object
      properties:
        name:
          maxLength: 512
          pattern: ^[a-zA-Z0-9\-\_\s\/\.]+$
          type: string
          description: Job name
        type:
          allOf:
            - $ref: '#/components/schemas/JobType'
          description: Job type
          default: basic
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
          description: List of tasks
        resources:
          allOf:
            - $ref: '#/components/schemas/Resources'
          description: Resources
        labels:
          type: object
          description: Metadata in the form of key-value pairs
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/InputFile'
          description: Small embedded input files
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/Artifact'
          description: Input artifacts
        policies:
          allOf:
            - $ref: '#/components/schemas/JobPolicies'
          description: Job policies
        notifications:
          allOf:
            - $ref: '#/components/schemas/JobNotifications'
          description: Job notifications
      description: Job description
      example:
        name: example
        tasks:
          - image: centos:7
            runtime: singularity
            cmd: /bin/hostname
            type: basic
        resources:
          cpus: 1
          memory: 1
          disk: 10
          nodes: 1
    JobId:
      title: JobId
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: Job id
    JobNotificationEvent:
      title: JobNotificationEvent
      enum:
        - jobFinished
      type: string
      description: Notification event for jobs
    JobNotifications:
      title: JobNotifications
      type: object
      properties:
        event:
          allOf:
            - $ref: '#/components/schemas/JobNotificationEvent'
          description: Notification will be triggered by this event
        type:
          allOf:
            - $ref: '#/components/schemas/NotificationType'
          description: Notification type
      description: Send notifications upon job events
    JobPolicies:
      title: JobPolicies
      type: object
      properties:
        ignoreTaskFailures:
          type: boolean
          description: Ignore task failures
          default: false
        maximumRetries:
          type: integer
          description: Maximum retries
          default: 0
        maximumTimeInQueue:
          type: integer
          description: Maximum time in queue
          default: 0
        maximumIdleTimePerResource:
          type: integer
          description: Maximum idle time per resource
          default: 0
        leaveInQueue:
          type: boolean
          description: Leave completed job in queue
          default: false
        placement:
          allOf:
            - $ref: '#/components/schemas/PlacementPolicies'
          description: Placement policies
      description: Job policies
    JobStatus:
      enum:
        - pending
        - running
        - completed
        - failed
        - deleted
      type: string
      description: Possible job states
    JobType:
      enum:
        - basic
        - openmpi
        - mpich
        - intelmpi
      type: string
      description: Type of job
    NotificationType:
      title: NotificationType
      enum:
        - email
      type: string
      description: Type of notification
    PlacementPolicies:
      type: object
      properties:
        requirements:
          allOf:
            - $ref: '#/components/schemas/Requirements'
          description: Conditions which must be trued
        preferences:
          allOf:
            - $ref: '#/components/schemas/Preferences'
          description: Used to rank sites
      description: Job placement policies
    Preferences:
      type: object
      properties:
        sites:
          type: array
          items:
            type: string
          description: Sites
        regions:
          type: array
          items:
            type: string
          description: Regions
      description: Job placement preferences
    Requirements:
      type: object
      properties:
        sites:
          type: array
          items:
            type: string
          description: Sites
        regions:
          type: array
          items:
            type: string
          description: Regions
      description: Job placement requirements
    Resources:
      required:
        - cpus
        - memory
        - disk
        - nodes
        - walltime
      type: object
      properties:
        cpus:
          minimum: 1
          type: integer
          description: Number of CPU cores
        memory:
          minimum: 1
          type: integer
          description: Memory in GB
        disk:
          minimum: 1
          type: integer
          description: Disk in GB
        nodes:
          minimum: 1
          type: integer
          description: Number of nodes
        walltime:
          minimum: 1
          type: integer
          description: Wall time in mins
      description: Resources required by the job
    SubmittedJob:
      required:
        - tasks
        - resources
        - id
        - status
        - statusReason
        - events
        - execution
      type: object
      properties:
        name:
          maxLength: 512
          pattern: ^[a-zA-Z0-9\-\_\s\/\.]+$
          type: string
          description: Job name
        type:
          allOf:
            - $ref: '#/components/schemas/JobType'
          description: Job type
          default: basic
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
          description: List of tasks
        resources:
          allOf:
            - $ref: '#/components/schemas/Resources'
          description: Resources
        labels:
          type: object
          description: Metadata in the form of key-value pairs
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/InputFile'
          description: Small embedded input files
        artifacts:
          type: array
          items:
            $ref: '#/components/schemas/Artifact'
          description: Input artifacts
        policies:
          allOf:
            - $ref: '#/components/schemas/JobPolicies'
          description: Job policies
        notifications:
          allOf:
            - $ref: '#/components/schemas/JobNotifications'
          description: Job notifications
        id:
          type: integer
          description: Job id
        status:
          allOf:
            - $ref: '#/components/schemas/JobStatus'
          description: Job status
        statusReason:
          type: string
          description: Reason for the current status
        events:
          allOf:
            - $ref: '#/components/schemas/Events'
          description: Job events
        execution:
          allOf:
            - $ref: '#/components/schemas/Execution'
          description: Execution details
      description: Job which has been submitted
      example:
        id: 1
        status: running
        statusReason: ''
        name: example
        tasks:
          - image: centos:7
            runtime: singularity
            cmd: /bin/hostname
            type: basic
        resources:
          cpus: 1
          memory: 1
          disk: 10
          nodes: 1
        events:
          createTime: 1638353410
          startTime: 1638353411
    Task:
      required:
        - image
        - runtime
      type: object
      properties:
        image:
          type: string
          description: Container image
        runtime:
          allOf:
            - $ref: '#/components/schemas/ContainerRuntime'
          description: Container runtime
        cmd:
          type: string
          description: Command
        workdir:
          type: string
          description: Work directory
        env:
          type: object
          additionalProperties:
            type: string
          description: Environment variables
        procsPerNode:
          type: integer
          description: Processes per node
        imagePullCredential:
          allOf:
            - $ref: '#/components/schemas/ImagePullCredential'
          description: Credential for container registry
      description: Task description
    TaskExecution:
      required:
        - exitCode
        - retries
        - imagePullTime
        - wallTimeUsage
        - cpuTimeUsage
        - maxResidentSetSizeKB
      type: object
      properties:
        exitCode:
          type: integer
          description: Exit code
        retries:
          type: integer
          description: Number of retries
        imagePullTime:
          type: integer
          description: Image pull time
        wallTimeUsage:
          type: integer
          description: Wall time usage in secs
        cpuTimeUsage:
          type: integer
          description: CPU time usage in secs
        maxResidentSetSizeKB:
          type: integer
          description: Maximum resident set size in KB
      description: Details about the execution of a task
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
tags:
  - name: jobs
    description: API endpoint for managing jobs
  - name: health
    description: API endpoint for retrieving service status information
