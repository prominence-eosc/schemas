openapi: 3.0.0
servers: []
info:
  description: |
    This is the specification of the PROMINENCE REST API.
    This is still considered a work in progress, so things could change or break with every update.
  version: 1.0.0
  title: PROMINENCE REST API 
  
tags:
  - name: jobs
    description: API endpoint for managing jobs
  - name: workflows
    description: API endpoint for managing workflows
  - name: data
    description: API endpoint for managing data
    
paths:
  /jobs:
    post:
      tags:
        - jobs
      summary: Create a job
      requestBody:
        description: Job description
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '201':
          description: Success       
        '400':
          description: Invalid job description    
        '401':
          description: Authentication failure
    get:
      tags:
        - jobs
      summary: List jobs
      description: Returns a list of jobs
      parameters:
        - name: detail
          in: query
          description: Show full details of jobs. By default only a limited amount of information about each job is provided.
          required: false
          schema:
            type: boolean
        - name: completed
          in: query
          description: Show completed jobs only.
          required: false
          schema:
            type: boolean            
        - name: all
          in: query
          description: Show both active and completed jobs.
          required: false
          schema:
            type: boolean            
        - name: constraint
          in: query
          description: Constraint in the form `key=value`. Only jobs which have a label `key` with value `value` will be returned.
          required: false
          schema:
            type: string    
        - name: id
          in: query
          description: Return only the specified job ids.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Invalid job ID provided                
        '401':
          description: Authentication failure
        '404':
          description: Job not found
    delete:
      tags:
        - jobs
      summary: Delete jobs
      parameters:
        - name: id
          in: query
          description: Job id(s) to delete
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
            minItems: 1
      responses:
        '200':
          description: Success     
        '400':
          description: Invalid job ID supplied
        '401':
          description: Authentication failure   
        '403':
          description: Not authorised to kill this job     
        '404':
          description: Job not found
  '/jobs/{id}/stdout':
    get:
      tags:
        - jobs
      summary: Get standard output from a job
      description: Get standard output from a job
      parameters:
        - name: id
          in: path
          description: ID of job to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Job does not exist
        '401':
          description: Authentication failure
        '403':
          description: Not authorised to access this job       
        '404':
          description: Standard output does not exist
  '/jobs/{id}/stderr':
    get:
      tags:
        - jobs
      summary: Get standard error from a job
      description: Get standard error from a job
      parameters:
        - name: id
          in: path
          description: ID of job to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Job does not exist
        '401':
          description: Authentication failure
        '403':
          description: Not authorised to access this job       
        '404':
          description: Standard output does not exist
  '/workflows':
    post:
      tags:
        - workflows
      summary: Create a workflow
      description: Create a workflow
      parameters:
        - name: id
          in: path
          description: ID of workflow to return
          required: true
          schema:
            type: integer
            format: int64      
      responses:
        default:
          description: Success
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workflow'
        description: Created user object
        required: true
    get:
      tags:
        - workflows
      summary: List workflows
      description: Returns a list of workflows
      parameters:      
        - name: id
          in: query
          description: Return only the specified job ids.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer      
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
        '401':
          description: Authentication failure   
    delete:
      tags:
        - workflows
      summary: Delete workflows
      parameters:
        - name: id
          in: query
          description: Job id(s) to delete
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
            minItems: 1           
      responses:
        '200':
          description: Success     
        '400':
          description: Invalid workflow ID supplied
        '401':
          description: Authentication failure   
        '403':
          description: Not authorised to kill this workflow   
        '404':
          description: Workflow not found
  '/data':
    post:
      tags:
        - data
      summary: Get a presigned URL for uploading a file
      parameters:
        - name: name
          in: query
          description: Object name
          required: true
          schema:
            type: string            
      responses:
        '201':
          description: Success   
          content:
            application/json:
              schema:  
                type: object
                properties:
                  url:
                    type: string              
        '401':
          description: Authentication failure      
        '405':
          description: Invalid input
    get:
      tags:
        - data
      summary: List files in object storage
      responses:
        '200':
          description: Success
        '401':
          description: Authentication failure
        '403':
          description: Not authorised to access this path 
    delete:
      tags:
        - data
      summary: Delete file in object storage
      parameters:
        - name: object name
          in: path
          description: Object name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success     
        '400':
          description: Invalid object name supplied
        '401':
          description: Authentication failure   
        '403':
          description: Not authorised to delete this object   
        '404':
          description: Object not found
  '/data/{name}':
    get:
      tags:
        - data
      summary: Get a presigned URL for downloading an existing file
      parameters:
        - name: name
          in: path
          description: Object name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success   
          content:
            application/json:
              schema:  
                type: object
                properties:
                  url:
                    type: string           
        '401':
          description: Authentication failure
        '403':
          description: Not authorised to access this path 
          
externalDocs:
  description: Find out more about PROMINENCE
  url: 'https://prominence-eosc.github.io/docs'
  
components:
  schemas:
    Workflow:
      type: object
      properties:
        name:
          type: string
          description: Workflow name
        labels:
          description: Labels
          type: object
          additionalProperties:
            type: string   
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Job'
          description: List of jobs     
      xml:
        name: Workflow            
    Job:
      type: object
      properties:
        name:
          type: string
          description: Job name
        labels:
          description: Labels
          type: object
          additionalProperties:
            type: string          
        resources:
          type: object
          properties:
            cpus:
              type: integer
              format: int32
              description: Requested number of CPUs
              minimum: 1
              example: 1
            memory:
              type: integer
              format: int32
              description: Requested memory in GB
              minimum: 1
              example: 1
            disk:
              type: integer
              format: int32
              description: Requested local disk in GB
              minimum: 1
              example: 10
            nodes:
              type: integer
              format: int32
              description: Requested number of nodes
              minimum: 1
              default: 1
              example: 1
            walltime:
              type: integer
              format: int32
              description: Requested walltime in mins
              minimum: 1              
              default: 720
              example: 720
          required:
          - cpus
          - memory
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
          description: List of tasks      
      xml:
        name: Job 
    Task:
      type: object
      properties:
        image:
          type: string
          description: Container image
          example: alahiff/testpi
        runtime:
          type: string
          description: Container runtime
          enum:
            - singularity
            - udocker
          example: singularity
        cmd:
          type: string
          description: Command to execute and any required arguments. If `cmd` is not provided the container's `ENTRYPOINT` will be used.
        workdir:
          type: string
          description: Current working directory
        env:
          description: Environment variables
          type: object
          additionalProperties:
            type: string
        type:
          type: string
          description: Task type
          enum:
            - basic
            - openmpi
            - mpich
            - intelmpi
        procsPerNode:
          type: integer
          format: int32
          description: Processes to run per node for MPI jobs. By default the number of processes to run per node is the same as the number of CPUs per node. Setting `procsPerNode` is useful for situations where a different number of processes is required per node compared to the number of CPUs available per node, for example hybrid MPI-OpenMP jobs.
          minimum: 1     
          example: 1
      required:
      - image
      - runtime
      xml:
        name: Task
